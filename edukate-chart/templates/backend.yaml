apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "common.labels" (merge (dict "service" .Values.backend) .) | nindent 4 }}
spec:
  selector:
    matchLabels:
      io.kompose.service: backend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "pod.common.labels" (merge (dict "service" .Values.backend ) .) | nindent 8 }}
      annotations:
        {{- include "pod.common.annotations" (dict "service" .Values.backend ) | nindent 8 }}
    spec:
      restartPolicy: Always
      containers:
        - name: backend
          {{- include "spring-boot.common" (merge (dict "service" .Values.backend) .) | nindent 10 }}
          env:
            {{- include "spring-boot.common.env" (merge (dict "service" .Values.backend) .) | nindent 12 }}
            {{ if .Values.mongodb.enabled }}
            - name: SPRING_DATA_MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mongodb.secretName }}
                  key: {{ .Values.mongodb.secretKey }}
            {{ end }}
            {{ if .Values.s3.enabled }}
            - name: S3_REGION
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.s3.secretName }}
                  key: "region"
            - name: S3_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.s3.secretName }}
                  key: "key"
            - name: S3_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.s3.secretName }}
                  key: "secret"
            - name: S3_BUCKET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.s3.secretName }}
                  key: "bucket"
            - name: S3_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.s3.secretName }}
                  key: "endpoint"
            {{ end }}
          volumeMounts:
            - {{ include "spring-boot.config-volume-mount" . | indent 14 | trim }}
          {{- include "spring-boot.management" .Values.backend | nindent 10 }}
      volumes:
        - {{ include "spring-boot.config-volume" (dict "service" .Values.backend) | indent 10 | trim }}
        - name: migrations-data
          emptyDir: {}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.backend.name }}-config
  namespace: {{ .Values.namespace }}
data:
  application.properties: |
    {{ if .Values.backend.applicationProperties }}
    {{- .Values.backend.applicationProperties | nindent 4 }}
    {{ end }}


---

apiVersion: v1
kind: Service
metadata:
{{- include "service.common.metadata" (dict "service" .Values.backend) | nindent 2 }}
  namespace: {{ .Values.namespace }}
spec:
  ports:
    {{- include "service.common.ports" (dict "service" .Values.backend) | nindent 4 }}
  selector:
    {{- include "service.common.selectors" (dict "service" .Values.backend) | nindent 4 }}
